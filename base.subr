# Copyright 2012 Google Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
# * Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimer in the
#   documentation and/or other materials provided with the distribution.
# * Neither the name of Google Inc. nor the names of its contributors
#   may be used to endorse or promote products derived from this software
#   without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Be aware that this code runs very early in the script.  Therefore, we
# cannot assume that any of the other shtk libraries have been loaded (and
# we cannot attempt to load them).  The only thing we can assume is that
# bootstrap.subr has been loaded and that we are being called by that piece
# of code.


# List of already-loaded modules.
_Shtk_LoadedModules=


if [ -n "${ZSH_VERSION+set}" ]; then
    emulate sh >/dev/null 2>&1
fi


shtk_import() {
    local module="${1}"; shift

    for loaded_module in ${_Shtk_LoadedModules}; do
        [ "${loaded_module}" != "${module}" ] || return 0
    done

    local path="${SHTK_MODULESPATH}:${SHTK_MODULESDIR}"
    local attempts=
    local oldifs="${IFS}"
    IFS=:
    for dir in ${path}; do
        [ -n "${dir}" ] || continue

        local file="${dir}/${module}.subr"
        if [ -f "${file}" ]; then
            IFS="${oldifs}"
            . "${file}"
            _Shtk_LoadedModules="${_Shtk_LoadedModules} ${module}"
            IFS=:

            attempts=
            break
        else
            if [ -z "${attempts}" ]; then
                attempts="${file}"
            else
                attempts="${attempts} ${file}"
            fi
        fi
    done
    IFS="${oldifs}"

    if [ -n "${attempts}" ]; then
        echo "${0##*/}: E: Cannot load module ${module}; tried ${attempts}" 1>&2
        exit 1
    fi
}
